{"version":3,"file":"static/js/344.4c3a1597.chunk.js","mappings":"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","sources":["components/pages/loginPage/LoginPage.js"],"sourcesContent":["import { useState, useContext } from \"react\";\r\nimport { useNavigate, useLocation, Link} from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\n\r\nimport { AuthContext } from \"../../auth/AuthProvider\";\r\n\r\nimport googleLogo from './img/googleLogo.png';\r\nimport facebookLogo from './img/facebookLogo.png';\r\nimport appleLogo from './img/appleLogo.png';\r\n\r\nimport './loginPage.scss';\r\n\r\nconst LoginPage = () => {\r\n    const [isSignupOpen, setIsSignupOpen] = useState(false);\r\n\r\n    let navigate = useNavigate();\r\n    let location = useLocation();\r\n    \r\n    const { signin, signout } = useContext(AuthContext);\r\n\r\n    let from = location.state?.from?.pathname || \"/project\";\r\n\r\n    const handleSubmit = (data) => {\r\n        let userInfo = data;\r\n\r\n        signin(userInfo, () => {\r\n            navigate(from, { replace: true });\r\n        });\r\n    }\r\n\r\n    const toggleSignup = () => {\r\n        setIsSignupOpen(!isSignupOpen);\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__wrapper\">\r\n                <p name=\"back\">\r\n                    <Link to=\"/\">Back to main page</Link>\r\n                </p>\r\n                <h1>Log in</h1>\r\n                <Formik\r\n                    initialValues={{\r\n                        email: '',\r\n                        password: '',\r\n                    }}\r\n                    validate={values => {\r\n                        const errors = {};\r\n                        if (!values.email) {\r\n                          errors.email = 'Email is required';\r\n                        }\r\n                        if (!values.password) {\r\n                          errors.password = 'Password is required';\r\n                        }\r\n                        return errors;\r\n                      }}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <Form className=\"login__form\">\r\n                        <div className=\"login__form-single\"> \r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <Field \r\n                                className=\"login__form-input\" \r\n                                type=\"email\" \r\n                                id=\"email\" \r\n                                name=\"email\" \r\n                                placeholder=\"janedoe@gmail.com\" />\r\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"login__form-input-error\"/>\r\n                        </div>\r\n                        <div className=\"login__form-single\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <Field\r\n                                className=\"login__form-input\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"enter your password\"\r\n                                type=\"password\"\r\n                            />\r\n                            <ErrorMessage name=\"password\" component=\"div\" className=\"login__form-input-error\"/>\r\n                        </div>\r\n                        <div className=\"login__form-button\">\r\n                            <button type=\"submit\">Sign in</button>\r\n                        </div>\r\n                    </Form>\r\n                </Formik>\r\n                <div className=\"login__registration\">\r\n                    <p onClick={toggleSignup}>Sign up</p>\r\n                    <p>Forgot password?</p>\r\n                </div>\r\n                \r\n                {/* SIGN UP */}\r\n\r\n                <div className=\"signup\" style={{transform: `translateY(${isSignupOpen ? '0px' : '600px'})` }}>\r\n                    <h2>Sign up</h2>\r\n                    \r\n                    <Formik\r\n                        initialValues={{\r\n                            email: '',\r\n                            name: '',\r\n                            password: '',\r\n                            confirmedPassword: ''\r\n                        }}\r\n                        validate={values => {\r\n                            const errors = {};\r\n                            if (!values.name) {\r\n                                errors.name = 'Name is required';\r\n                            }\r\n                            if (!values.email) {\r\n                            errors.email = 'Email is required';\r\n                            }\r\n                            if (!values.password) {\r\n                            errors.password = 'Password is required';\r\n                            }\r\n                            return errors;\r\n                        }}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        <Form className=\"signup__form\">\r\n                            <div className=\"signup__form-input-wrapper\" >\r\n                                <div className=\"signup__form-single\"> \r\n                                    {/* <label htmlFor=\"name\">Name</label> */}\r\n                                    <Field \r\n                                        className=\"signup__form-input\" \r\n                                        type=\"text\" \r\n                                        id=\"name\" \r\n                                        name=\"name\" \r\n                                        placeholder=\"your name\" />\r\n                                    <div name=\"separation\" />\r\n                                    {/* <ErrorMessage name=\"name\" component=\"div\" className=\"signup__form-input-error\"/> */}\r\n                                </div>\r\n                                <div className=\"signup__form-single\"> \r\n                                    <Field \r\n                                        className=\"signup__form-input\" \r\n                                        type=\"email\" \r\n                                        id=\"email\" \r\n                                        name=\"email\" \r\n                                        placeholder=\"your email\" />\r\n                                    <div name=\"separation\" />\r\n                                    {/* <ErrorMessage name=\"email\" component=\"div\" className=\"signup__form-input-error\"/> */}\r\n                                </div>\r\n                                <div className=\"signup__form-single\">\r\n                                    <Field\r\n                                        className=\"signup__form-input\"\r\n                                        id=\"password\"\r\n                                        name=\"password\"\r\n                                        placeholder=\"create password\"\r\n                                        type=\"password\"\r\n                                    />\r\n                                    <div name=\"separation\" />\r\n                                    {/* <ErrorMessage name=\"password\" component=\"div\" className=\"login__form-input-error\"/> */}\r\n                                    \r\n                                </div>\r\n                                <div className=\"signup__form-single\"> \r\n                                    <Field\r\n                                        className=\"signup__form-input\"\r\n                                        id=\"confirmedPassword\"\r\n                                        name=\"confirmedPassword\"\r\n                                        placeholder=\"confirm password\"\r\n                                        type=\"password\"\r\n                                    />\r\n                                    {/* <ErrorMessage name=\"email\" component=\"div\" className=\"signup__form-input-error\"/> */}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"signup__form-button\">\r\n                                <p name=\"back-to-signin\" onClick={toggleSignup}>Already have an account? Sign in</p>\r\n                                <button type=\"submit\">Sign up</button>\r\n                            </div>\r\n                        </Form>\r\n                    </Formik>\r\n\r\n                    <div className=\"signup__registration\">\r\n                        <p>Continue with</p>\r\n                        <div>\r\n                            <a href=\"#\">\r\n                                <img src={googleLogo} alt=\"google-logo\" />\r\n                            </a>\r\n                            <a href=\"#\">\r\n                                <img src={facebookLogo} alt=\"facebook-logo\" />\r\n                            </a>\r\n                            <a href=\"#\">\r\n                                <img src={appleLogo} alt=\"apple-logo\" />\r\n                            </a>\r\n                        </div>\r\n                    </div>    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;"],"names":["useState","isSignupOpen","setIsSignupOpen","navigate","useNavigate","location","useLocation","useContext","AuthContext","signin","from","signout","state","pathname","handleSubmit","data","replace","toggleSignup","className","name","to","initialValues","email","password","validate","values","errors","onSubmit","htmlFor","type","id","placeholder","component","onClick","style","transform","confirmedPassword","href","src","googleLogo","alt","facebookLogo"],"sourceRoot":""}