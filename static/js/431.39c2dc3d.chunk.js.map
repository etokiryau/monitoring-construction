{"version":3,"file":"static/js/431.39c2dc3d.chunk.js","mappings":"wLAyBA,IACA,EAAe,IAA0B,0D,SCiBzC,EAnCuB,WAEnB,OAAgCA,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAEtBC,GAAkBC,EAAAA,EAAAA,QAAO,MAE3BC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEPC,GAAiBC,EAAAA,EAAAA,KAAjBD,cAERE,EAAAA,EAAAA,YAAU,WACNT,EAAYK,EAASK,MACzB,GAAG,KAEHD,EAAAA,EAAAA,YAAU,WACNF,EAAaR,EAAUE,EAC3B,GAAG,CAACF,IAOJ,OACI,iBAAKY,UAAU,WAAU,WACrB,iBAAKC,QAPmB,WAC5B,IAAIC,EAAsBR,EAASS,SAASC,SAAS,iBAAmB,EAClDZ,EAAtBU,GAAgC,EAAc,iBAClD,EAI+CF,UAAU,iBAAgB,WAC7D,gBAAKK,IAAKC,EAAOC,IAAI,WACrB,uBAAG,aAEP,gBAAKP,UAAU,mBAAmBQ,IAAKlB,MAGnD,C","sources":["components/pages/account/solutionViewerPage/img/arrow.svg","components/pages/account/solutionViewerPage/SolutionViewerPage.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 75,\n    height: 87,\n    viewBox: \"0 0 75 87\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 44L37.5 22.3494L75 0.69873V14L23 44L75 72.5V87L37.5 65.6506L0 44Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/arrow.c027f9b1ce6f06c838e285ebbfbb3c74.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useEffect, useRef} from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nimport { useAutodeskPlatformService } from \"../../../../services/AutodeskPlatformService\";\r\nimport arrow from './img/arrow.svg';\r\n\r\nimport './solutionViewerPage.scss';\r\n\r\nconst SolutionViewer = () => {\r\n\r\n    const [modelUrn, setModelUrn] = useState('');\r\n\r\n    const viewerContainer = useRef(null);\r\n\r\n    let navigate = useNavigate();\r\n    let location = useLocation();\r\n\r\n    const { renderViewer } = useAutodeskPlatformService();\r\n\r\n    useEffect(() => {\r\n        setModelUrn(location.state);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        renderViewer(modelUrn, viewerContainer);\r\n    }, [modelUrn])\r\n    \r\n    const backToDocumentationPage = () => {\r\n        let isFromDocumentation = location.pathname.includes('documentation') > 0 ? true : false;\r\n        isFromDocumentation ? navigate(-1) : navigate('/documentation');\r\n    }\r\n\r\n    return (\r\n        <div className=\"solution\">\r\n            <div onClick={backToDocumentationPage} className=\"solution__back\">\r\n                <img src={arrow} alt=\"arrow\" />\r\n                <p>Back</p>\r\n            </div>\r\n            <div className=\"solution__viewer\" ref={viewerContainer} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SolutionViewer;"],"names":["useState","modelUrn","setModelUrn","viewerContainer","useRef","navigate","useNavigate","location","useLocation","renderViewer","useAutodeskPlatformService","useEffect","state","className","onClick","isFromDocumentation","pathname","includes","src","arrow","alt","ref"],"sourceRoot":""}